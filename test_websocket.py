#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞
"""

import asyncio
import json
import random

import websockets


async def test_websocket():
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    room_id = 1
    user_id = random.randint(1, 1000)
    username = f"TestUser{user_id}"
    
    # URL WebSocket
    ws_url = f"ws://localhost:8000/chat/ws/{room_id}?user_id={user_id}&username={username}"
    
    print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: {ws_url}")
    
    try:
        async with websockets.connect(ws_url) as websocket:
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫ {username}")
            test_message = {
                "type": "message",
                "content": f"–ü—Ä–∏–≤–µ—Ç –æ—Ç {username}!"
            }
            
            await websocket.send(json.dumps(test_message))
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {test_message['content']}")
            
            # –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            print("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
            
            async for message in websocket:
                try:
                    data = json.loads(message)
                    print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ: {data}")
                    
                    if data.get("type") == "user_list":
                        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ–Ω–ª–∞–π–Ω: {len(data.get('users', []))}")
                    
                    # –û—Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                    if data.get("type") == "message":
                        break
                        
                except json.JSONDecodeError:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {message}")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket: {e}")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç WebSocket —á–∞—Ç–∞")
    asyncio.run(test_websocket())
